type Query {
  me: User!
  Post: Post!
  posts(query:String): [Post!]!
  users: [User!]!
  comments:[Comment!]!
}
type Mutation{
  createUser(input: createUserInput): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: updateeUserInput!): User!

  createPost(input: createPostInput): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!,data: updatePostInput ): Post!

  createComment(input: createCommentInput): Comment!
  deleteComment(id: ID!): Comment!
}



input createUserInput {
  name:String!
  email: String!
  age:Int
}
input updateeUserInput {
  name:String
  email: String
  age:Int
}
input createPostInput {
  title: String!
  body: String!
  published: Boolean
  author: String!
}
input updatePostInput {
  title: String
  body: String
  published: Boolean
}
input createCommentInput{
  text: String!
  post: String!
  author: String!
}

type User{
  id: ID!
  name: String!
  email: String!
  age: Int
  posts:[Post!]!
  comments:[Comment!]
}
type Post{
  id: ID!
  title: String!
  body: String!
  published: Boolean
  author: User!
  comments: [Comment!]
}
type Comment{
  id: ID!
  text: String!
  author: User!
  post: Post!
}